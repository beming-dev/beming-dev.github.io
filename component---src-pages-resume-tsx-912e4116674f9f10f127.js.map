{"version":3,"file":"component---src-pages-resume-tsx-912e4116674f9f10f127.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/pages/resume.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/resume.css\"; // 이 페이지에서만 사용하는 CSS (선택)\r\n\r\nconst ResumePage = () => {\r\n  // 'ko' 또는 'en'\r\n  const [lang, setLang] = useState(\"ko\");\r\n\r\n  // 언어 토글 함수\r\n  const toggleLanguage = () => {\r\n    setLang((prev) => (prev === \"ko\" ? \"en\" : \"ko\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"resume flex justify-center items-center bg-gray-50 min-h-screen py-8\">\r\n      {/* A4 컨테이너 */}\r\n      <div className=\"a4-container w-[210mm] min-h-[297mm] bg-white relative shadow-lg\">\r\n        {/* 인쇄하기 버튼 (인쇄 시 숨김) */}\r\n        <div className=\" w-full justify-between absolute flex  sm:top-4 top-0 right-0 print-hide z-0\">\r\n          <button\r\n            onClick={toggleLanguage}\r\n            className=\"w-24 px-3 py-2 sm: bg-indigo-600 bg-transparent text-white text-sm rounded-md hover:bg-indigo-500 transition\"\r\n          >\r\n            {/* 버튼에 표시할 텍스트: 현재 언어가 ko면 'ENGLISH' 버튼, en이면 '한국어' 버튼 */}\r\n            {lang === \"ko\" ? \"ENGLISH\" : \"한국어\"}\r\n          </button>\r\n          <button\r\n            onClick={() => window.print()}\r\n            className=\"px-3 py-2 sm: bg-indigo-500 bg-transparent text-white rounded-md text-sm hover:bg-indigo-600 transition\"\r\n          >\r\n            인쇄하기\r\n          </button>\r\n        </div>\r\n\r\n        {/* Hero 영역 */}\r\n        <div className=\"bg-gradient-to-r from-indigo-600 to-indigo-500 text-white px-20 py-10 flex flex-col items-center z-10\">\r\n          <div>\r\n            <div className=\"self-start gap-3 flex justify-between items-center\">\r\n              {/* 이름 & 직책 */}\r\n              <div className=\"min-h-full  flex flex-col justify-between\">\r\n                <h1 className=\"text-2xl font-bold mb-2\">\r\n                  채민관 (Chae Mingwan)\r\n                </h1>\r\n                <p className=\"text-sm text-indigo-100 mt-1\">\r\n                  Fullstack Developer\r\n                </p>\r\n              </div>\r\n\r\n              {/* 프로필 사진 */}\r\n              <div className=\"w-28 h-28 rounded-full bg-gray-200 mb-4 overflow-hidden\">\r\n                <img\r\n                  src=\"/profile.jpg\"\r\n                  alt=\"Profile\"\r\n                  className=\"w-full h-full object-cover\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* 연락처, SNS 등 */}\r\n            <div className=\"flex flex-wrap justify-center gap-3 mt-4 text-sm\">\r\n              <div className=\"flex items-center gap-1\">\r\n                <span className=\"font-semibold\">Phone:</span>\r\n                <span>010-7107-9301</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-1\">\r\n                <span className=\"font-semibold\">Email:</span>\r\n                <span>mingfordev@gmail.com</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-1\">\r\n                <span className=\"font-semibold\">GitHub:</span>\r\n                <a\r\n                  href=\"https://github.com/beming-dev\"\r\n                  className=\"underline hover:text-blue-700\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  github.com/beming-dev\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 메인 콘텐츠 */}\r\n        <div className=\"px-4 py-8 flex flex-col items-center\">\r\n          {/* 소개 섹션 */}\r\n          <section className=\"mb-8 w-full\">\r\n            <h2 className=\"text-2xl font-semibold mb-2 border-b border-gray-300 pb-1\">\r\n              {lang === \"ko\" ? \"소개\" : \"Profile\"}\r\n            </h2>\r\n            <div className=\"bg-white shadow-sm border border-gray-200 rounded-md p-4\">\r\n              <p className=\"text-sm text-gray-700 leading-relaxed\">\r\n                {lang === \"ko\" ? (\r\n                  <>\r\n                    코드 간 의존성을 낮추어 유지 보수가 쉬운 아키텍처를 설계하기\r\n                    위해 고민하고,\r\n                    <br />\r\n                    사용자의 요구사항과 의사소통을 중요시하는 개발자 채민관\r\n                    입니다.\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    I am developer Chae Min Gwan who carefully considers\r\n                    designing an architecture that lowers code dependencies for\r\n                    easier maintenance, and who places great importance on user\r\n                    requirements and communication.\r\n                  </>\r\n                )}\r\n              </p>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 학력 섹션 */}\r\n          <section className=\"mb-8 w-full\">\r\n            <h2 className=\"text-2xl font-semibold mb-2 border-b border-gray-300 pb-1\">\r\n              {lang === \"ko\" ? \"학력\" : \"Education\"}\r\n            </h2>\r\n            <div className=\"bg-white shadow-sm border border-gray-200 rounded-md p-4\">\r\n              <h3 className=\"font-semibold text-base\">\r\n                {lang === \"ko\" ? \"서울시립대학교\" : \"University of Seoul\"}\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500\">\r\n                {lang === \"ko\"\r\n                  ? \"2019.03 ~ 2025.08 | 컴퓨터과학부\"\r\n                  : \"Mar 2019 ~ Aug 2025 | Computer Science\"}\r\n              </p>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 경력 섹션 */}\r\n          <section className=\"mb-8 w-full\">\r\n            <h2 className=\"text-2xl font-semibold mb-2 border-b border-gray-300 pb-1\">\r\n              {lang === \"ko\" ? \"경력\" : \"Career\"}\r\n            </h2>\r\n            <div className=\"grid gap-4\">\r\n              {/* 회사 카드 #1 */}\r\n              <div className=\"bg-white shadow-sm border border-gray-200 rounded-md p-4 space-y-2\">\r\n                {/* 프로젝트 제목/기간/직무 */}\r\n                <h3 className=\"text-xl font-semibold text-base\">\r\n                  {lang === \"ko\" ? \"코딧\" : \"CODIT\"}\r\n                </h3>\r\n                <p className=\"text-md text-gray-500\">\r\n                  {lang === \"ko\"\r\n                    ? \"2025.03 ~ 2025.07 | 백엔드 인턴\"\r\n                    : \"Mar 2025 ~ Aug 2025 | Backend Internship\"}\r\n                </p>\r\n                <br />\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"소개\" : \"Introduction\"}\r\n                  </h4>\r\n                  <p className=\"text-md\">\r\n                    {lang === \"ko\"\r\n                      ? `기업에게 법·규제·정책 솔루션을 제공하는 B2B 스타트업입니다.`\r\n                      : \"\"}\r\n                    <br />\r\n                    {lang === \"ko\"\r\n                      ? `API 개발, 알림 서버, 크롤링, Opensearch 인덱싱 등 다양한 부분을 경험하고 서비스에 기여했습니다.`\r\n                      : \"\"}\r\n                  </p>\r\n                  <br />\r\n                  <p className=\"text-blue-500 text-sm mt-3\">\r\n                    사이트 주소:{\" \"}\r\n                    <a\r\n                      href=\"https://thecodit.com/kr-ko\"\r\n                      className=\"underline hover:text-blue-700\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      https://thecodit.com\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n                <br />\r\n                {/* 기여도(Contributions) */}\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"배운것\" : \"What I learned\"}\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 space-y-1 mt-2\">\r\n                    {lang === \"ko\" ? (\r\n                      <>\r\n                        <li>\r\n                          애자일 개발 프로세스 하에서 2~3주 단위의 스프린트를\r\n                          운영하고, 매일 스크럼 회의를 통해 진행 상황을 공유하며\r\n                          신속하게 이슈를 해결하는 방법을 경헙했습니다.\r\n                        </li>\r\n                        <li>\r\n                          Jira, Confluence, Slack 등 다양한 협업 도구를 활용하여\r\n                          팀원들과의 원활한 소통과 협업을 경험했습니다.\r\n                        </li>\r\n                        <li>\r\n                          실제 운영 중인 프로덕션 코드베이스를 직접 다루며 코드\r\n                          이해력과 문제 해결 역량을 강화했습니다.\r\n                        </li>\r\n                        <li>\r\n                          수백만 건 규모의 데이터를 Opensearch에 인덱싱하여,\r\n                          인덱스 구조 최적화와 단계별 캐싱 전략을 적용함으로써\r\n                          검색 쿼리 성능을 향상시켰습니다.\r\n                        </li>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <li>\r\n                          Applied Clean Architecture principles using the\r\n                          Nest.js framework\r\n                        </li>\r\n                        <li>\r\n                          Configured a pipeline for visualizing Docker container\r\n                          logs by integrating Filebeat, Elasticsearch, Logstash,\r\n                          and Kibana with Docker Compose{\" \"}\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/elk/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Blog]\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          Built a CI/CD pipeline on AWS CodePipeline to deploy\r\n                          both frontend and backend to EC2 via Docker containers{\" \"}\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/pipeline/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Blog]\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          Implemented a clustering algorithm based on DBSCAN for\r\n                          study matching{\" \"}\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/clustering/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Blog]\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          Introduced Redis to reduce API response times via\r\n                          caching and to utilize its messaging queue\r\n                          capabilities for notifications <br />\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/caching/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Caching Blog]\r\n                          </a>{\" \"}\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/caching/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Message Queue Blog]\r\n                          </a>\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n                <br />\r\n                {/* 기술 스택(Tech Stack) */}\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"기술 스택\" : \"Tech Stack\"}\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 space-y-1 mt-2\">\r\n                    {lang === \"ko\" ? (\r\n                      <>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            Express.js\r\n                          </span>\r\n                          <span>\r\n                            를 사용해 RESTful API 서버를 설계·개발했습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            MySQL\r\n                          </span>\r\n                          <span>\r\n                            을 기반으로 복잡한 조인 쿼리와 인덱스 튜닝을 통해\r\n                            데이터베이스 성능을 최적화했습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            AirFlow\r\n                          </span>\r\n                          <span>\r\n                            를 활용해 ETL 워크플로우를 정의하고, 스케줄러를 통해\r\n                            배치 작업 자동화를 구현했습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            Opensearch\r\n                          </span>\r\n                          <span>\r\n                            를 사용해 데이터 인덱싱 및 검색 인프라를\r\n                            구축했습니다.\r\n                          </span>\r\n                        </li>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <li>Nest.js</li>\r\n                        <li>MongoDB</li>\r\n                        <li>AWS, Docker</li>\r\n                        <li>Redis</li>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 협업 프로젝트 섹션 */}\r\n          <section className=\"mb-8 w-full\">\r\n            <h2 className=\"text-2xl font-semibold mb-2 border-b border-gray-300 pb-1\">\r\n              {lang === \"ko\" ? \"협업 프로젝트\" : \"Collaborated Project\"}\r\n            </h2>\r\n            <div className=\"grid gap-4\">\r\n              {/* 회사 카드 #1 */}\r\n              <div className=\"bg-white shadow-sm border border-gray-200 rounded-md p-4 space-y-2\">\r\n                {/* 프로젝트 제목/기간/직무 */}\r\n                <h3 className=\"text-xl font-semibold text-base\">\r\n                  {lang === \"ko\" ? \"About 프로젝트\" : \"About Project\"}\r\n                </h3>\r\n                <p className=\"text-md text-gray-500\">\r\n                  {lang === \"ko\"\r\n                    ? \"2022.06 ~ 현재 | 백엔드 개발자\"\r\n                    : \"Jun 2022 ~ Present | Backend Developer\"}\r\n                </p>\r\n                <br />\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"프로젝트 소개\" : \"Project Introduction\"}\r\n                  </h4>\r\n                  <p className=\"text-md\">\r\n                    {lang === \"ko\"\r\n                      ? \"대학생을 위한 모임 플랫폼 서비스입니다. 스터디, 번개 모임, 소모임 등의 기능을 제공하며, 현재 google analytics 기준 400명 정도의 DAU(Daily Active User)를 유지하고 있습니다.\"\r\n                      : \"A platform designed for college students, offering features like study groups, instant meetups, and small clubs. Currently, it maintains around 400 Daily Active Users (based on Google Analytics).\"}\r\n                  </p>\r\n                  <br />\r\n                  <p className=\"text-blue-500 text-sm mt-3\">\r\n                    사이트 주소:{\" \"}\r\n                    <a\r\n                      href=\"https://study-about.club/\"\r\n                      className=\"underline hover:text-blue-700\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      https://study-about.club/\r\n                    </a>\r\n                    <p className=\"text-black text-sm\">\r\n                      접속하여, 게스트 로그인을 클릭해 사이트를 체험할 수\r\n                      있습니다.\r\n                    </p>\r\n                  </p>\r\n                  <p className=\"text-blue-500 text-sm mt-3\">\r\n                    Backend:{\" \"}\r\n                    <a\r\n                      href=\"https://github.com/AboutClan/nest-back\"\r\n                      className=\"underline hover:text-blue-700\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      https://github.com/AboutClan/nest-back\r\n                    </a>\r\n                  </p>\r\n                  <p className=\"text-blue-500 text-sm\">\r\n                    Frontend:{\" \"}\r\n                    <a\r\n                      href=\"https://github.com/AboutClan/About\"\r\n                      className=\"underline hover:text-blue-700\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      https://github.com/AboutClan/About\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n                <br />\r\n                {/* 기여도(Contributions) */}\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"기여도\" : \"Contributions\"}\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 space-y-1 mt-2\">\r\n                    {lang === \"ko\" ? (\r\n                      <>\r\n                        <li>\r\n                          Nest.js 프레임워크를 이용해 클린 아키텍처 개념 적용\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/clean/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [블로그]\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          도메인 주도 개발을 적용하기 위한 리팩토링을 진행\r\n                        </li>\r\n                        <li>\r\n                          Filebeat, ElasticSearch, Logstash, Kibana를\r\n                          Docker-compose로 묶어 Docker container의 로그를\r\n                          시각화하는 파이프라인 구성\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/elk/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [블로그]\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          AWS codepipeline을 이용해 EC2에 Docker container로\r\n                          프론트엔드, 백엔드를 배포하는 CI/CD 파이프라인 구성\r\n                          {/* <a\r\n                            href=\"https://beming-dev.github.io/blog/about/pipeline/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [블로그]\r\n                          </a> */}\r\n                        </li>\r\n                        <li>\r\n                          스터디 매칭을 위해, DBSCAN 알고리즘을 응용한\r\n                          클러스터링 알고리즘 구현\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/clustering/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [블로그]\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          Redis를 도입하여, 캐싱을 사용해 api 응답속도를 줄이고,\r\n                          알림 서비스의 메시지 큐로 활용\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/pubsub/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [블로그]\r\n                          </a>\r\n                        </li>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <li>\r\n                          Applied Clean Architecture principles using the\r\n                          Nest.js framework\r\n                        </li>\r\n                        <li>\r\n                          Configured a pipeline for visualizing Docker container\r\n                          logs by integrating Filebeat, Elasticsearch, Logstash,\r\n                          and Kibana with Docker Compose{\" \"}\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/elk/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Blog]\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          Built a CI/CD pipeline on AWS CodePipeline to deploy\r\n                          both frontend and backend to EC2 via Docker containers{\" \"}\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/pipeline/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Blog]\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          Implemented a clustering algorithm based on DBSCAN for\r\n                          study matching{\" \"}\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/clustering/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Blog]\r\n                          </a>\r\n                        </li>\r\n                        <li>\r\n                          Introduced Redis to reduce API response times via\r\n                          caching and to utilize its messaging queue\r\n                          capabilities for notifications <br />\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/caching/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Caching Blog]\r\n                          </a>{\" \"}\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/about/caching/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Message Queue Blog]\r\n                          </a>\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n                <br />\r\n                {/* 기술 스택(Tech Stack) */}\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"기술 스택\" : \"Tech Stack\"}\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 space-y-1 mt-2\">\r\n                    {lang === \"ko\" ? (\r\n                      <>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            Nest.js\r\n                          </span>\r\n                          <span>\r\n                            를 도입하여 DI/DIP 개념을 적용함으로써\r\n                            데이터베이스의 결합도를 낮추고 유지보수성을\r\n                            개선했습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            MongoDB\r\n                          </span>\r\n                          <span>\r\n                            를 활용하여 스키마 변경이 잦은 데이터 모델에\r\n                            유연하게 대응할 수 있도록 설계했습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            AWS\r\n                          </span>\r\n                          <span>\r\n                            에 배포를 구성하여 배포 비용을 절감하고, 다양한\r\n                            기능을 사용해보았습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            Docker\r\n                          </span>\r\n                          <span>\r\n                            를 활용하여 애플리케이션을 컨테이너화하고, 일관된\r\n                            개발 및 배포 환경을 유지하고 있습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            Redis\r\n                          </span>\r\n                          <span>\r\n                            를 메시지큐와 캐싱기능을 위해 사용하고 있습니다.\r\n                          </span>\r\n                        </li>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <li>Nest.js</li>\r\n                        <li>MongoDB</li>\r\n                        <li>AWS, Docker</li>\r\n                        <li>Redis</li>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n                {/* 트러블슈팅(Troubleshooting) */}\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1 mt-8\">\r\n                    {lang === \"ko\" ? \"트러블슈팅\" : \"Troubleshooting\"}\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 space-y-1 mt-2\">\r\n                    {lang === \"ko\" ? (\r\n                      <>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># 문제 상황</div>\r\n                          <div className=\"mt-1\">\r\n                            사용자가 증가하며 서버에 예기치 못한 에러가 자주\r\n                            발생하고 종료되는 일 발생\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># 해결 방법</div>\r\n                          <div className=\"mt-1\">\r\n                            발생 가능한 예외 상황에 대해 에러 타입을 명시적으로\r\n                            정의하고, 코드 전반에 걸쳐 체계적인 예외 처리 로직을\r\n                            정비하여 안정성을 높였습니다.\r\n                          </div>\r\n                          <div className=\"mt-1\">\r\n                            ELK 스택(Elasticsearch, Logstash, Kibana) +\r\n                            Filebeat을 도입하여 로그를 중앙 집중식으로 관리,\r\n                            모니터링함으로써 문제 발생 시 신속하게 원인을\r\n                            파악하고 대응하고 있습니다.\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># 문제 상황</div>\r\n                          <div className=\"mt-1\">\r\n                            초기 페이지 렌더링에서, 로딩 속도가 느려져 사용자\r\n                            경험이 안좋아지는 상황 발생\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># 해결 방법</div>\r\n                          <div className=\"mt-1\">\r\n                            MongoDB에서, 불필요한 populate 연산을 최소화하고,\r\n                            인덱싱을 통해 데이터베이스 인덱스를 재구성하여 쿼리\r\n                            처리 속도를 향상했습니다.\r\n                          </div>\r\n                          <div className=\"mt-1\">\r\n                            ELK스택을 사용해 시간이 오래 걸리는 API를 시각화하여\r\n                            찾아내고, Redis 캐싱 기능을 이용해 해당 API를\r\n                            캐싱하여, 최종적으로는 데이터 처리속도를 절반 가량\r\n                            줄였습니다.\r\n                            <a\r\n                              href=\"https://beming-dev.github.io/blog/about/caching/\"\r\n                              className=\"blog-link ml-2\"\r\n                            >\r\n                              [블로그]\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># 문제 상황</div>\r\n                          <div className=\"mt-1\">\r\n                            사용자가 증가하며 RAM 사용량도 증가하고, Heroku의\r\n                            높은 비용을 감당하기 어려워짐\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># 해결 방법</div>\r\n                          <div className=\"mt-1\">\r\n                            AWS에서 EC2인스턴스를 대여하고, Codepipeline을\r\n                            사용해 Github의 코드를 트래킹하여 Docker Container로\r\n                            배포하는 CI/CD pipeline 구성\r\n                          </div>\r\n                          <div className=\"mt-1\">\r\n                            기존 Heroku 배포 방식보다 높은 RAM을 사용하며, 매달\r\n                            100달러 가량의 비용 절감\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># Issue</div>\r\n                          <div className=\"mt-1\">\r\n                            As the user base grew, the server frequently\r\n                            encountered unexpected errors and occasionally shut\r\n                            down.\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># Solution</div>\r\n                          <div className=\"mt-1\">\r\n                            Explicitly defined error types for potential\r\n                            exceptions and revamped the overall exception\r\n                            handling logic to increase stability.\r\n                          </div>\r\n                          <div className=\"mt-1\">\r\n                            Adopted the ELK stack (Elasticsearch, Logstash,\r\n                            Kibana) with Filebeat for centralized log management\r\n                            and monitoring, enabling quick identification and\r\n                            resolution of issues.\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># Issue</div>\r\n                          <div className=\"mt-1\">\r\n                            MongoDB query performance deteriorated due to the\r\n                            increasing data volume, significantly slowing down\r\n                            both data retrieval and response time.\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># Solution</div>\r\n                          <div className=\"mt-1\">\r\n                            Minimized unnecessary populate operations and\r\n                            reorganized database indexes to improve query\r\n                            processing speed.\r\n                          </div>\r\n                          <div className=\"mt-1\">\r\n                            Leveraged MongoDB’s aggregation pipeline to optimize\r\n                            complex data processing, thus enhancing overall\r\n                            response times.\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># Issue</div>\r\n                          <div className=\"mt-1\">\r\n                            As the number of users increased, RAM usage\r\n                            skyrocketed, making Heroku’s costs unsustainable.\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># Solution</div>\r\n                          <div className=\"mt-1\">\r\n                            Migrated to AWS EC2 instances and used CodePipeline\r\n                            to track GitHub commits and deploy the Docker\r\n                            containers through a CI/CD pipeline.\r\n                          </div>\r\n                          <div className=\"mt-1\">\r\n                            This approach provided higher RAM capacity and\r\n                            reduced monthly costs by roughly 100 USD compared to\r\n                            the previous Heroku setup.\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 개인 프로젝트 섹션 */}\r\n          <section className=\"mb-8 w-full\">\r\n            <h2 className=\"text-2xl font-semibold mb-2 border-b border-gray-300 pb-1\">\r\n              {lang === \"ko\" ? \"개인 프로젝트\" : \"Personal Project\"}\r\n            </h2>\r\n            <div className=\"grid gap-4\">\r\n              {/* 개인프로젝트 #1 */}\r\n              <div className=\"bg-white shadow-sm border border-gray-200 rounded-md p-4 space-y-2\">\r\n                {/* 프로젝트 제목/기간/직무 */}\r\n                <h3 className=\"text-xl font-semibold text-base\">\r\n                  {lang === \"ko\" ? \"주식 시뮬레이션\" : \"Stock Simulation\"}\r\n                </h3>\r\n                <p className=\"text-md text-gray-500\">\r\n                  {lang === \"ko\"\r\n                    ? \"2024.12 ~ * | 풀스택 개발\"\r\n                    : \"Dec 2024 ~ * | Fullstack Developer\"}\r\n                </p>\r\n                <br />\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"프로젝트 소개\" : \"Project Introduction\"}\r\n                  </h4>\r\n                  <p className=\"text-md\">\r\n                    {lang === \"ko\"\r\n                      ? \"한국투자증권 api를 이용해, 실시간 한국 주식, 미국 주식 데이터를 받아오고 거래 시뮬레이션을 해볼 수 있는 서비스를 개발했습니다.\"\r\n                      : \"Developed a service that utilizes the Korea Investment & Securities API to fetch real-time Korean and US stock data, allowing users to simulate trades.\"}\r\n                  </p>\r\n                  <br />\r\n                  <p className=\"text-blue-500 text-sm\">\r\n                    사이트주소:{\" \"}\r\n                    <a\r\n                      href=\"https://beming-stock.kro.kr/\"\r\n                      className=\"text-blue-500\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {\" \"}\r\n                      https://beming-stock.kro.kr/\r\n                    </a>\r\n                    <p className=\"text-black text-sm\">\r\n                      * Ram 1GB 인스턴스에 Docker를 사용하고 있어, 사이트가\r\n                      느리게 작동할 수 있습니다. 특히 초기 데이터 로딩때 많은\r\n                      시간이 소요됩니다.\r\n                    </p>\r\n                  </p>\r\n                  <p className=\"text-blue-500 text-sm\">\r\n                    Frontend:{\" \"}\r\n                    <a\r\n                      href=\"https://github.com/beming-dev/stock-simulator-front\"\r\n                      className=\"text-blue-500\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {\" \"}\r\n                      https://github.com/beming-dev/stock-simulator-front\r\n                    </a>\r\n                  </p>\r\n                  <p className=\"text-blue-500 text-sm\">\r\n                    Backend:{\" \"}\r\n                    <a\r\n                      href=\"https://github.com/beming-dev/stock-simulator-back\"\r\n                      className=\"text-blue-500\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {\" \"}\r\n                      https://github.com/beming-dev/stock-simulator-back\r\n                    </a>\r\n                  </p>\r\n                </div>\r\n                <br />\r\n                {/* 기여도(Contributions) */}\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"기여도\" : \"Contributions\"}\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 space-y-1 mt-2\">\r\n                    {lang === \"ko\" ? (\r\n                      <>\r\n                        <li>\r\n                          실시간 데이터를 받아오기 위해, 한투api와 백엔드 서버\r\n                          사이의 WebSocket, 백엔드 서버와 클라이언트 사이의\r\n                          WebSocket을 연결하는 아키텍처 구성\r\n                        </li>\r\n                        <li>\r\n                          Oracle cloud와 Jenkins, Gitlab webhook을 이용한 CI/CD\r\n                          파이프라인 구축\r\n                        </li>\r\n                        <li>\r\n                          kubernetes와 argoCD를 이용한 배포 자동화를 적용해보고,\r\n                          서비스의 가용성을 높였습니다.\r\n                        </li>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <li>\r\n                          Designed an architecture that connects WebSockets\r\n                          between the Korea Investment & Securities API and the\r\n                          backend, as well as between the backend and the\r\n                          client, for real-time data handling\r\n                        </li>\r\n                        <li>\r\n                          Built a CI/CD pipeline using Oracle Cloud, Jenkins,\r\n                          and GitLab webhooks\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n                <br />\r\n                {/* 기술 스택(Tech Stack) */}\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"기술 스택\" : \"Tech Stack\"}\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 space-y-1 mt-2\">\r\n                    {lang === \"ko\" ? (\r\n                      <>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            Spring\r\n                          </span>\r\n                          <span>\r\n                            을 사용하여 유지보수성과 확장성을 고려한 백엔드를\r\n                            구축했습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            MySQL\r\n                          </span>\r\n                          <span>\r\n                            를 사용하여 정규화된 데이터 모델을 설계하고,\r\n                            인덱싱과 다양한 쿼리를 경험해봤습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            React.js\r\n                          </span>\r\n                          <span>\r\n                            를 사용하여 컴포넌트 기반 UI를 설계하고, 상태 관리를\r\n                            효율적으로 처리하여 사용자 경험을 최적화했습니다.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            tailwindCSS\r\n                          </span>\r\n                          <span>\r\n                            를 사용하여 유틸리티 기반 스타일링 으로 일관된\r\n                            디자인을 유지하면서도 개발 속도를 향상시켰습니다.\r\n                          </span>\r\n                        </li>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            Spring\r\n                          </span>\r\n                          <span>\r\n                            Built a backend with an emphasis on maintainability\r\n                            and scalability.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            MySQL\r\n                          </span>\r\n                          <span>\r\n                            Designed a normalized data model and gained\r\n                            experience with indexing and various queries.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            React.js\r\n                          </span>\r\n                          <span>\r\n                            Developed a component-based UI and effectively\r\n                            handled state management to optimize user\r\n                            experience.\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          <span className=\"inline-block px-3 py-1 text-xs text-black font-semibold mr-2\">\r\n                            tailwindCSS\r\n                          </span>\r\n                          <span>\r\n                            Used a utility-first approach for consistent design\r\n                            and faster development.\r\n                          </span>\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n\r\n                <br />\r\n                {/* 트러블슈팅(Troubleshooting) */}\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold border-b pb-1\">\r\n                    {lang === \"ko\" ? \"트러블슈팅\" : \"Troubleshooting\"}\r\n                  </h4>\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-700 space-y-1 mt-2\">\r\n                    {lang === \"ko\" ? (\r\n                      <>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># 문제 상황</div>\r\n                          <div className=\"mt-1\">\r\n                            초기에 WebSocket 연결이 늘어날수록 데이터 전송이\r\n                            지연되고, 중복 전송되는 문제가 발생\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># 해결 방법</div>\r\n                          <div className=\"mt-1\">\r\n                            같은 데이터를 요청하는 WebSocket 연결을 그룹화하고,\r\n                            데이터가 들어올 때 Event를 활용한 브로드캐스트\r\n                            방식으로 각 클라이언트에 전송하도록 구성하여 지연과\r\n                            중복 전송 문제를 해결했습니다.\r\n                          </div>\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/stock-simulator/websocket/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [블로그]\r\n                          </a>\r\n                        </div>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># 문제 상황</div>\r\n                          <div className=\"mt-1\">\r\n                            Oracle Cloud에 배포된 인스턴스에서 Jenkins 서버를\r\n                            구동하고, GitLab Webhook을 통해 빌드-배포 자동화를\r\n                            구축하려 했으나, 초기 설정 시 네트워크 보안 그룹\r\n                            혹은 방화벽 설정 누락으로 인해 Webhook이 Jenkins에\r\n                            도달하지 못하거나, Docker 등 컨테이너 환경에서\r\n                            필요한 포트가 제대로 오픈되지 않아 배포 자동화가\r\n                            실패하는 문제 발생.\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># 해결 방법</div>\r\n                          <div className=\"mt-1\">\r\n                            Oracle Cloud VM 인스턴스의 보안\r\n                            규칙(Inbound/Outbound Rules)과 Jenkins가 사용하는\r\n                            포트를 허용했습니다.\r\n                          </div>\r\n                          <div className=\"mt-1\">\r\n                            GitLab 프로젝트 설정에서 Webhook URL을 설정하고,\r\n                            정상적으로 HTTP 200 응답을 받는지 테스트했습니다.\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># Issue</div>\r\n                          <div className=\"mt-1\">\r\n                            As the number of WebSocket connections increased,\r\n                            data transmission became delayed and some data was\r\n                            sent redundantly.\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># Solution</div>\r\n                          <div className=\"mt-1\">\r\n                            Grouped WebSocket connections that requested the\r\n                            same data, then used event-based broadcasting to\r\n                            deliver updates to each client, resolving the delay\r\n                            and duplication issues.\r\n                          </div>\r\n                          <a\r\n                            href=\"https://beming-dev.github.io/blog/stock-simulator/websocket/\"\r\n                            className=\"blog-link\"\r\n                          >\r\n                            [Blog]\r\n                          </a>\r\n                        </div>\r\n                        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                          <div className=\"font-semibold\"># Issue</div>\r\n                          <div className=\"mt-1\">\r\n                            Attempted to run a Jenkins server on an Oracle Cloud\r\n                            instance and integrate GitLab Webhooks for automated\r\n                            build/deployment, but the pipeline failed due to\r\n                            missing network security group/firewall settings.\r\n                            Webhook requests never reached Jenkins, and the\r\n                            necessary ports for Docker containers were not open.\r\n                          </div>\r\n                          <div className=\"font-semibold mt-2\"># Solution</div>\r\n                          <div className=\"mt-1\">\r\n                            Allowed Jenkins ports and configured\r\n                            Inbound/Outbound rules on the Oracle Cloud VM\r\n                            instance.\r\n                          </div>\r\n                          <div className=\"mt-1\">\r\n                            Set up the Webhook URL in the GitLab project\r\n                            settings, testing to ensure HTTP 200 responses were\r\n                            received successfully.\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 기술 스택 섹션 */}\r\n          <section className=\"mb-8 w-full\">\r\n            <h2 className=\"text-2xl font-semibold mb-2 border-b border-gray-300 pb-1\">\r\n              {lang === \"ko\" ? \"기술 스택\" : \"Skills\"}\r\n            </h2>\r\n            <div className=\"bg-white shadow-sm border border-gray-200 rounded-md\">\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {/* 각각의 박스 */}\r\n                <div className=\"w-full max-w-screen-lg mx-auto py-2 px-2\">\r\n                  <div className=\"grid grid-cols-1 gap-6\">\r\n                    {/* Backend Card */}\r\n                    <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                      <h3 className=\"text-xl font-semibold mb-4\">Backend</h3>\r\n                      {/* Express.js */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          Express.js\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            Node.js 기반의 경량 프레임워크로 RESTful API 서버를\r\n                            구축한 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            미들웨어를 활용해 인증/권한 처리, 로깅 등을 유연하게\r\n                            구성합니다.\r\n                          </li>\r\n                          <li>\r\n                            Express.js의 Error Handling 과정을 이해하고 있고,\r\n                            Custom Error Handler를 구성할 수 있습니다.\r\n                            <a\r\n                              href=\"https://beming-dev.github.io/blog/about/error/\"\r\n                              className=\"blog-link\"\r\n                            >\r\n                              [블로그]\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* Nest.js */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          Nest.js\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            모듈(Module) 구조와 의존성 주입(Dependency\r\n                            Injection) 등을 활용해 아키텍처를 설계합니다.\r\n                          </li>\r\n                          <li>\r\n                            클린아키텍처 구조를 따르기 위해 노력하고, 코드간\r\n                            의존성을 제거하기 위해 노력합니다.\r\n                          </li>\r\n                          <li>\r\n                            데코레이터 기반으로 라우팅, 파이프, 가드 등을 설정해\r\n                            유연하고 확장성 있는 API를 구성해본 경험이 있습니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* Spring */}\r\n                      <div>\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          Spring\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            Spring Boot를 사용하여 MVC 아키텍처로 웹\r\n                            애플리케이션을 구축한 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            스프링 DI/IoC 컨테이너를 통해 객체 의존성을\r\n                            관리하고, AOP로 공통 기능을 추상화합니다.\r\n                          </li>\r\n                          <li>\r\n                            JPA/Hibernate 등 ORM 기술을 사용해 데이터베이스 연동\r\n                            및 트랜잭션 관리를 구현해본 경험이 있습니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Frontend Card */}\r\n                    <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                      <h3 className=\"text-xl font-semibold mb-4\">Frontend</h3>\r\n                      {/* React.js */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          React.js\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            함수형 컴포넌트 및 React Hooks를 능숙하게\r\n                            활용합니다.\r\n                          </li>\r\n                          <li>\r\n                            Redux, Recoil을 사용해 전역 상태를 효율적으로\r\n                            관리해본 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            컴포넌트 구조 설계와 재사용성을 고려한 UI 개발에\r\n                            익숙합니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* TailwindCSS */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          Tailwind.css\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            Utility-First 기반으로 빠르게 UI를 구현하고, 일관된\r\n                            디자인 시스템을 유지할 수 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            Tailwind.config 설정을 통해 테마(색상, 폰트 등)를\r\n                            커스터마이징해본 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            반응형 디자인을 손쉽게 적용해 다양한 해상도에 맞춰\r\n                            스타일링할 수 있습니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* Next.js */}\r\n                      <div>\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          Next.js\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            Server-Side Rendering(SSR), Static Site\r\n                            Generation(SSG) 등 다양한 렌더링 방식을 활용할 수\r\n                            있습니다.\r\n                          </li>\r\n                          <li>\r\n                            파일 기반 라우팅과 API Routes로 백엔드 로직을\r\n                            구성해본 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            getServerSideProps, getStaticProps를 이용해 성능과\r\n                            SEO를 고려한 프로젝트를 진행해본 경험이 있습니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Database Card */}\r\n                    <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                      <h3 className=\"text-xl font-semibold mb-4\">Database</h3>\r\n                      {/* MySQL */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          MySQL\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            관계형 데이터베이스를 설계하고 정규화 할 수\r\n                            있습니다.\r\n                          </li>\r\n                          <li>\r\n                            인덱스를 활용한 성능 최적화, Join을 효율적으로\r\n                            사용하는 방법을 잘 알고 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            트랜잭션과 락(Lock) 메커니즘을 이해하고 있으며,\r\n                            데이터 무결성 유지를 위한 다양한 기법을\r\n                            알고있습니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* MongoDB */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          MongoDB\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            Document 기반 비관계형 DB로, 스키마가 유연한\r\n                            프로젝트에서 활용해본 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            Aggregation을 사용해 복잡한 데이터 처리 로직을\r\n                            효율적으로 구현할 수 있습니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* Redis */}\r\n                      <div>\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          Redis\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            Redis에서 제공하는 기본 자료구조에 대해\r\n                            알고있습니다.\r\n                            <a\r\n                              href=\"https://beming-dev.github.io/subCategory/redis/\"\r\n                              className=\"blog-link\"\r\n                            >\r\n                              [블로그]\r\n                            </a>\r\n                          </li>\r\n                          <li>\r\n                            인메모리 캐싱을 활용해 DB 부하 감소 및 애플리케이션\r\n                            응답 속도를 최적화해본 경험이 있습니다.\r\n                            <a\r\n                              href=\"https://beming-dev.github.io/blog/about/caching/\"\r\n                              className=\"blog-link\"\r\n                            >\r\n                              [블로그]\r\n                            </a>\r\n                          </li>\r\n                          <li>\r\n                            Redis를 메시지 큐로 활용해 실시간 메시징 구조를\r\n                            구축해본 경험이 있습니다.\r\n                            <a\r\n                              href=\"https://beming-dev.github.io/blog/about/pubsub/\"\r\n                              className=\"blog-link\"\r\n                            >\r\n                              [블로그]\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Etc. Card */}\r\n                    <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                      <h3 className=\"text-xl font-semibold mb-4\">Etc.</h3>\r\n                      {/* Docker */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          Docker\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            Dockerfile을 작성하여 애플리케이션 환경을 이미지로\r\n                            빌드하고, 컨테이너로 배포한 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            Docker Compose를 이용해 DB, 백엔드, 프론트엔드 등\r\n                            여러 컨테이너 환경을 오케스트레이션해본 경험이\r\n                            있습니다.\r\n                          </li>\r\n                          <li>\r\n                            CI/CD 파이프라인에서 Docker 이미지를 생성, 배포해본\r\n                            경험이 있어 자동화에 능숙합니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* Kubernetes */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          Kubernetes\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            Kubernetes 클러스터를 구성하고, Pod, Service,\r\n                            Deployment 등의 리소스를 관리해본 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            ArgoCd를 사용하여 GitOps 방식으로 Kubernetes\r\n                            리소스를 관리하고, 배포 자동화를 구현해본 경험이\r\n                            있습니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* AWS */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          AWS\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            EC2, S3, RDS 등 AWS 서비스를 활용하여 인프라를\r\n                            구성하고, 배포한 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            IAM을 통해 사용자 및 권한 관리를 설정하고, 보안\r\n                            그룹을 이용해 네트워크 접근 제어를 구현해본 경험이\r\n                            있습니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      {/* Git */}\r\n                      <div className=\"mb-4\">\r\n                        <span className=\"inline-block px-3 py-1 text-xs rounded-full bg-indigo-100 text-indigo-600 font-semibold\">\r\n                          Git\r\n                        </span>\r\n                        <ul className=\"list-disc ml-3 mt-2 text-sm space-y-1\">\r\n                          <li>\r\n                            Git-flow 전략 등을 통해 협업 시 브랜치 및 릴리즈\r\n                            관리를 체계적으로 해본 경험이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            rebase와 branch 개념을 이용해 git graph를 깔끔하게\r\n                            관리하는 것에 관심이 있습니다.\r\n                          </li>\r\n                          <li>\r\n                            Pull Request 기반 코드 리뷰와 Github Issues 연동으로\r\n                            작업 관리를 진행해본 경험이 있습니다.\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 공부중인것 섹션 */}\r\n          <section className=\"mb-8 w-full\">\r\n            <h2 className=\"text-2xl font-semibold mb-2 border-b border-gray-300 pb-1\">\r\n              {lang === \"ko\" ? \"공부중인것\" : \"Studying\"}\r\n            </h2>\r\n            <div className=\"bg-white shadow-sm border border-gray-200 rounded-md p-4\">\r\n              <ul className=\"text-sm text-gray-700\">\r\n                <li className=\"text-black text-md\">Redis</li>\r\n                <li className=\"text-black text-md\">Kafka</li>\r\n              </ul>\r\n            </div>\r\n          </section>\r\n\r\n          {/* 기타 섹션 */}\r\n          <section className=\"w-full\">\r\n            <h2 className=\"text-2xl font-semibold mb-2 border-b border-gray-300 pb-1\">\r\n              {lang === \"ko\" ? \"기타\" : \"Etc.\"}\r\n            </h2>\r\n            <div className=\"bg-white shadow-sm border border-gray-200 rounded-md p-4\">\r\n              <h3 className=\"font-semibold text-base\">\r\n                {lang === \"ko\" ? \"교환학생\" : \"Exchange Student\"} | The Hague\r\n                University of Applied Sciences\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500\">2023.08 ~ 2024.02</p>\r\n              <ul className=\"text-sm text-gray-700 mt-2\">\r\n                <li>\r\n                  {lang === \"ko\"\r\n                    ? \"Becoming the Next successful online startup 수업 수강\"\r\n                    : \"Took the 'Becoming the Next successful online startup' course\"}\r\n                </li>\r\n                <li>\r\n                  {lang === \"ko\"\r\n                    ? \"온라인 스타트업을 시작하기 위해 거쳐야하는 과정들을 직접 서비스를 제작하며 경험\"\r\n                    : \"Hands-on experience creating a service that covers the steps needed to launch an online startup\"}\r\n                </li>\r\n                <li>\r\n                  {lang === \"ko\"\r\n                    ? \"Next.js와 Next.js api를 이용해 헬스케어 온라인 스타트업 프로토타입 개발\"\r\n                    : \"Developed a healthcare online startup prototype using Next.js and its API features\"}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"bg-white shadow-sm border border-gray-200 rounded-md p-4\">\r\n              <h3 className=\"font-semibold text-base\">TOEIC (875/990)</h3>\r\n              <p className=\"text-sm text-gray-500\">2023.02</p>\r\n            </div>\r\n            <div className=\"bg-white shadow-sm border border-gray-200 rounded-md p-4\">\r\n              <h3 className=\"font-semibold text-base\">\r\n                {lang === \"ko\" ? \"정보처리기사\" : \"Exchange Student\"}\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500\">2025.06</p>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumePage;\r\n"],"names":["lang","setLang","useState","React","className","onClick","prev","window","print","src","alt","href","target","rel"],"sourceRoot":""}