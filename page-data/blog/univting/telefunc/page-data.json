{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/blog/univting/telefunc/","result":{"data":{"markdownRemark":{"html":"<h2>Telefunc란</h2>\n<p>Telefunc는 기존 서버와 통신하는 방식인 rest api나 graphql과 다르게, fontend에서 backend의 함수를 직접 호출하는 것처럼 사용할 수 있는 방식을 제공한다.</p>\n<h2>Telefunc사용 이유</h2>\n<p>우리 프로젝트는 backend가 복잡하게 구성되진 않을 것 같아서 nextjs의 api routes를 서버로 사용하려 했다.\r\n그러던 중, Telefunc를 사용하면 nextjs에서 Backend를 따로 분리하지 않아도 된다는걸 알게 됐고, 프로젝트에 한번 적용해보기로 했다.</p>\n<h2>사용</h2>\n<ul>\n<li>/next.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> withTelefunc <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"telefunc/next\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>default\r\n\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">withTelefunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>/pages/_app.tsx</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">...</span>\r\n<span class=\"token keyword\">const</span> isBrowser <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isBrowser<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  config<span class=\"token punctuation\">.</span>telefuncUrl <span class=\"token operator\">=</span> <span class=\"token string\">'/api/_telefunc'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> pageProps <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> AppProps</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token operator\">...</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>-pages/api/_telefunc.ts\r\n위의 _app.tsx에서 설정한 telefuncUrl에서 아래와 같이 설정해두면 알아서 Telefunc함수 호출을 http request로 바꿔주는 방식인듯 하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> telefunc<span class=\"token punctuation\">,</span> config <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"telefunc\"</span>\r\n<span class=\"token keyword\">import</span> type <span class=\"token punctuation\">{</span> NextApiRequest<span class=\"token punctuation\">,</span> NextApiResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"next\"</span>\r\n<span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">\"assert\"</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getIronSession <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"iron-session\"</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">SESSION_OPTION</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"../../config/cookie\"</span>\r\n\r\nconfig<span class=\"token punctuation\">.</span>telefuncUrl <span class=\"token operator\">=</span> <span class=\"token string\">\"/api/_telefunc\"</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">telefuncMiddleware</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token parameter\"><span class=\"token literal-property property\">req</span><span class=\"token operator\">:</span> NextApiRequest<span class=\"token punctuation\">,</span>\r\n  <span class=\"token literal-property property\">res</span><span class=\"token operator\">:</span> NextApiResponse</span>\r\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">const</span> session <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getIronSession</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> <span class=\"token constant\">SESSION_OPTION</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> url<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> body <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req\r\n  <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>url <span class=\"token operator\">&amp;&amp;</span> method<span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">const</span> httpRequest <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n    url<span class=\"token punctuation\">,</span>\r\n    method<span class=\"token punctuation\">,</span>\r\n    body<span class=\"token punctuation\">,</span>\r\n    <span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token keyword\">const</span> httpResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">telefunc</span><span class=\"token punctuation\">(</span>httpRequest<span class=\"token punctuation\">)</span>\r\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span>httpResponse<span class=\"token punctuation\">.</span>statusCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>httpResponse<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>/TelefuncContext.ts</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> IronSession <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'iron-session'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token string\">'telefunc'</span><span class=\"token punctuation\">;</span>\r\n\r\ndeclare module <span class=\"token string\">'telefunc'</span> <span class=\"token punctuation\">{</span>\r\n  namespace Telefunc <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Context</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token literal-property property\">session</span><span class=\"token operator\">:</span> IronSession<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n</code></pre></div>\n<ul>\n<li>/components/Nav.tsx</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">...</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> onGetUser<span class=\"token punctuation\">,</span> onLogout <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../router/login.telefunc'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Nav</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t<span class=\"token operator\">...</span>\r\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">onGetUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">await</span> <span class=\"token function\">onLogout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">setUser</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>Flex justifyContent<span class=\"token operator\">=</span><span class=\"token string\">\"space-between\"</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>\r\n          <span class=\"token operator\">&lt;</span>strong<span class=\"token operator\">></span>Univting<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>strong<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\r\n        <span class=\"token punctuation\">{</span>user <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\r\n          <span class=\"token operator\">&lt;</span>Button background<span class=\"token operator\">=</span><span class=\"token string\">\"none\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>logout<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\r\n            Logout\r\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\r\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\r\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Flex<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Telefunc 설정을 마치면 이제 frontend에서 ~.telefunc.ts 파일에 정의한 함수를 import하고 호출하여 사용할 수 있다.</p>","frontmatter":{"date":"January 04, 2023","title":"유니브팅 - Telefunc"},"tableOfContents":"<ul>\n<li><a href=\"#telefunc%EB%9E%80\">Telefunc란</a></li>\n<li><a href=\"#telefunc%EC%82%AC%EC%9A%A9-%EC%9D%B4%EC%9C%A0\">Telefunc사용 이유</a></li>\n<li><a href=\"#%EC%82%AC%EC%9A%A9\">사용</a></li>\n</ul>"}},"pageContext":{"id":"c90e840c-d4d4-5943-b029-4e8a62775fcd","frontmatter__slug":"/blog/univting/telefunc","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["2018336255","2540505676","2678393935","2810064759","3398502926"],"slicesMap":{}}