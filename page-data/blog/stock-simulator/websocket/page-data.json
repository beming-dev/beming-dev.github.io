{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/blog/stock-simulator/websocket/","result":{"data":{"markdownRemark":{"html":"<h1>WebSocket을 왜 사용해야 할까요?</h1>\n<p>WebSocket은 하나의 TCP 연결로 클라이언트와 서버가 지속적으로 실시간 데이터를 전송할 수 있는 프로토콜 입니다. 간단히 말하면 실시간 양방향 데이터 전송 프로토콜이라 할 수 있습니다.</p>\n<p>HTTP는 매 요청마다 연결과 응답이 끝나면 다시 연결을 맺어야 합니다. 데이터를 지속적으로 주고받으려면 polling을 사용해야 하는데,  polling 방식은 서버의 자원을 많이 사용합니다.</p>\n<p>그래서 주식 현재가, 거래 데이터 같은 실시간 데이터를 주고받을 때는 WebSocket을 활용하는 것이 효율적입니다.</p>\n<h1>WebSocket 구성을 어떻게 해야할까?</h1>\n<p>Stocket simulator를 제작하면서, 한국투자증권의 API를 사용했습니다.\n프론트엔드, 백엔드, 한투 서버 이렇게 3가지를 두고 실시간 데이터를 전송하려면, WebSocket을 이중으로 구현해야 합니다.</p>\n<p>그래서 Backend와 한투 서버 사이의 WebSocket 통신과, 백엔드와 프론트 사이의 WebSocket 통신 두 가지를 함께 구성해야 했습니다.</p>\n<h1>어떤 문제가 있었을까?</h1>\n<p>구조를 설계하면서, 세 가지 문제가 있었습니다.</p>\n<ol>\n<li>WebSocket연결이 중복 생성되어 너무 많은 WebSocket연결이 생성되어 서버가 감당하지 못했습니다.</li>\n<li>페이지를 나갈 때 WebSocket 연결이 제대로 끊어지지 않아서 낭비가 발생했습니다.</li>\n<li>두 WebSocket Handler가 서로를 순환참조 하여 에러가 발생했습니다.</li>\n</ol>\n<h2>1번 문제 해결</h2>\n<p>먼저, 다음과 같은 구조를 설계했습니다.</p>\n<p>각 WebSocket 요청 별로, key를 생성하여, 그 요청을 요구하는 Session들을 저장하는 자료구조를 만들었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WebSocketSession</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> subscriptions <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>WebSocket subscribe요청이 들어오면, key 값으로 같은 요청이 있는지 판단하고 없으면 그 요청을 생성하고 있다면 이미 있는 요청에 구독자로 추가됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"subscribe\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token class-name\">String</span> subscriptionKey <span class=\"token operator\">=</span> trId <span class=\"token operator\">+</span> <span class=\"token string\">\"|\"</span> <span class=\"token operator\">+</span> trKey<span class=\"token punctuation\">;</span>  \n  \n    <span class=\"token comment\">// 중복 요청 확인  </span>\n    subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">computeIfAbsent</span><span class=\"token punctuation\">(</span>subscriptionKey<span class=\"token punctuation\">,</span> k <span class=\"token operator\">-></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CopyOnWriteArraySet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User Subscribed: \"</span> <span class=\"token operator\">+</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" to \"</span> <span class=\"token operator\">+</span> subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n    eventPublisher<span class=\"token punctuation\">.</span><span class=\"token function\">publishEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocketEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> trId<span class=\"token punctuation\">,</span> trKey<span class=\"token punctuation\">,</span> trType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"unsubscribe\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token function\">removeSession</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> trId<span class=\"token punctuation\">,</span> trKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>구독을 취소할 때는, 구독자가 남아있는지 판단하여 구독자가 없다면 그 key의 연결을 아예 삭제합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">removeSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> trId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> trKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token class-name\">String</span> subscriptionKey <span class=\"token operator\">=</span> trId <span class=\"token operator\">+</span> <span class=\"token string\">\"|\"</span> <span class=\"token operator\">+</span> trKey<span class=\"token punctuation\">;</span>  \n    <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WebSocketSession</span><span class=\"token punctuation\">></span></span> sessions <span class=\"token operator\">=</span> subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sessions <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token comment\">// session 삭제  </span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sessions<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Removed session: \"</span> <span class=\"token operator\">+</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" from subscription: \"</span> <span class=\"token operator\">+</span> subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sessions<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token comment\">// sessions가 비어 있으면 subscriptions에서 subscriptionKey 삭제</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sessions<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n                subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                eventPublisher<span class=\"token punctuation\">.</span><span class=\"token function\">publishEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocketEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> trId<span class=\"token punctuation\">,</span> trKey<span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span>  \n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Session not found in subscription: \"</span> <span class=\"token operator\">+</span> subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No sessions found for subscription key: \"</span> <span class=\"token operator\">+</span> subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>이러한 구조를 구현하여, 같은 요청에 대해 중복된 WebSocket 연결을 생성하지 않고, 필요없는 연결을 삭제할 수 있도록 설계했습니다.</p>\n<h2>2번 문제 해결</h2>\n<p>주식 페이지를 벗어날 때, 그 주식에 대해 unsubscribe가 되지 않는 문제가 있었습니다.</p>\n<p>이 문제는 useEffect의 cleanup과 eventListener를 이용해 해결했습니다.</p>\n<p>먼저 주식 정보 페이지에 들어가면, subscibe 요청을 보냅니다.\n구독 취소를 요청하는 함수를 작성한 후, useEffect의 return에서 호출합니다. 원래라면 이 때 구독 해제가 잘 작동해야 하는데 페이지를 벗어날 때 잘 작동하지 않는 문제가 있었습니다.</p>\n<p>그래서 beforeunload eventListener에 해당 함수를 등록해두고, cleanup에서 제거해주는 방식을 채택했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isConnected<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> socketOpenData <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"subscribe\"</span><span class=\"token punctuation\">,</span>\n        tr_type<span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n        rq_type<span class=\"token operator\">:</span> <span class=\"token string\">\"current\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">symbol</span><span class=\"token operator\">:</span> stockSymbol<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n      <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>socketOpenData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  \n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleBeforeUnload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> unsubscribeMessage <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token string\">\"unsubscribe\"</span><span class=\"token punctuation\">,</span>\n        tr_type<span class=\"token operator\">:</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span>\n        rq_type<span class=\"token operator\">:</span> <span class=\"token string\">\"current\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">symbol</span><span class=\"token operator\">:</span> stockSymbol<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>unsubscribeMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeunload\"</span><span class=\"token punctuation\">,</span> handleBeforeUnload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">handleBeforeUnload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beforeunload\"</span><span class=\"token punctuation\">,</span> handleBeforeUnload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>isConnected<span class=\"token punctuation\">,</span> stockSymbol<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>3번 문제 해결</h2>\n<p>프론트-백 WebSocket에서 백-한투 WebSocket에 구독, 구독해제 정보를 보내기 위해 호출해야하고.\n백-한투 WebSocket에서 프론트-백 WebSocket에 데이터 전송을 위해 호출해야 하는데, 이 과정에서 순환 참조가 발생하여 오류가 났습니다.</p>\n<p>이 문제는 Java의 EventListener 기능을 사용하여 해결했습니다.\n한쪽에서 Event를 발행하고, Listener가 그 Event를 듣고 함수를 호출하면, 인스턴스를 직접 호출할 필요가 없어집니다.</p>\n<p>먼저, Event 객체를 만들어줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>stock<span class=\"token punctuation\">.</span>stock_simulator<span class=\"token punctuation\">.</span>event</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApplicationEvent</span></span><span class=\"token punctuation\">;</span>  \n  \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebSocketEvent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ApplicationEvent</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> tr_id<span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> tr_key<span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> tr_type<span class=\"token punctuation\">;</span>  \n  \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">WebSocketEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> source<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> trId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> trKey<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> trType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        tr_id <span class=\"token operator\">=</span> trId<span class=\"token punctuation\">;</span>  \n        tr_key <span class=\"token operator\">=</span> trKey<span class=\"token punctuation\">;</span>  \n        tr_type <span class=\"token operator\">=</span> trType<span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token comment\">//getter</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>프론트-백 WebSocket Handler에서 event를 발행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ApplicationEventPublisher</span> eventPublisher<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">FrontendWebSocketHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationEventPublisher</span> eventPublisher<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eventPublisher <span class=\"token operator\">=</span> eventPublisher<span class=\"token punctuation\">;</span>    \n<span class=\"token punctuation\">}</span>\n\neventPublisher<span class=\"token punctuation\">.</span><span class=\"token function\">publishEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocketEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> trId<span class=\"token punctuation\">,</span> trKey<span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>백-한투 WebSocket Handler에서 발행된 Event를 수신합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebSocketHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TextWebSocketHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WebSocketEvent</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token annotation punctuation\">@Override</span>  \n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onApplicationEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n\t    <span class=\"token class-name\">String</span> tr_id <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getTr_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t    <span class=\"token class-name\">String</span> tr_key <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getTr_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t    <span class=\"token class-name\">String</span> tr_type <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getTr_type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t  \n\t    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>  \n\t        <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>tr_id<span class=\"token punctuation\">,</span> tr_key<span class=\"token punctuation\">,</span> tr_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n\t        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n\t    <span class=\"token punctuation\">}</span>  \n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>코드를 분석해봅시다</h1>\n<p>아래부터는 어떻게 두가지 WebSocket Handler를 구성했는지에 대한 자세한 코드입니다. 필요시 참고만 해주세요.</p>\n<h2>Frontend - Backend WebSocket Config</h2>\n<ul>\n<li>EnableWebsocket annotation을 통해 Spring이 WebSocket 관련 처리를 하게 해줍니다.</li>\n<li>frontendWebSocketHandler를 등록하고, /ws를 WebSocket을 위한 endpoint로 사용합니다.</li>\n<li>cors 설정으로, Frontend를 허용합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>  \n<span class=\"token annotation punctuation\">@EnableWebSocket</span>  \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebSocketConfig</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">WebSocketConfigurer</span> <span class=\"token punctuation\">{</span>  \n  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">FrontendWebSocketHandler</span> frontendWebSocketHandler<span class=\"token punctuation\">;</span>  \n  \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">WebSocketConfig</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FrontendWebSocketHandler</span> frontendWebSocketHandler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>frontendWebSocketHandler <span class=\"token operator\">=</span> frontendWebSocketHandler<span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token annotation punctuation\">@Override</span>  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerWebSocketHandlers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketHandlerRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        registry<span class=\"token punctuation\">.</span><span class=\"token function\">addHandler</span><span class=\"token punctuation\">(</span>frontendWebSocketHandler<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/ws\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// WebSocket 엔드포인트  </span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">setAllowedOriginPatterns</span><span class=\"token punctuation\">(</span>  \n                        <span class=\"token string\">\"http://localhost:5173\"</span><span class=\"token punctuation\">,</span>  \n                        <span class=\"token string\">\"https://beming-stock.kro.kr\"</span><span class=\"token punctuation\">,</span>  \n                        <span class=\"token string\">\"http://beming-stock.kro.kr\"</span><span class=\"token punctuation\">,</span>  \n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Backend - 한투 API WebSocket 설정</h2>\n<ul>\n<li>Spring에서 제공하는 WebSocket client (StandardWebSocketClient) 를 사용합니다.</li>\n<li>WebSocket key를 가져오고, 한투의 WebSocket 주소와 연결합니다.</li>\n<li>앱 실행시 자동으로 WebSocket이 연결되도록 합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>  \n<span class=\"token annotation punctuation\">@EnableWebSocket</span>  \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebSocketExternalConfig</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">WebSocketConfigurer</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">StockApiInterface</span> stockApi<span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">WebSocketHandler</span> webSocketHandler<span class=\"token punctuation\">;</span>  \n  \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">WebSocketExternalConfig</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StockApiInterface</span> stockApi<span class=\"token punctuation\">,</span> <span class=\"token class-name\">WebSocketHandler</span> webSocketHandler<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FrontendWebSocketHandler</span> frontendWebSocketHandler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stockApi <span class=\"token operator\">=</span> stockApi<span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>webSocketHandler <span class=\"token operator\">=</span> webSocketHandler<span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token annotation punctuation\">@Override</span>  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerWebSocketHandlers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketHandlerRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">WebSocketClient</span> webSocketClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StandardWebSocketClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token class-name\">String</span> webSocketKey <span class=\"token operator\">=</span> stockApi<span class=\"token punctuation\">.</span><span class=\"token function\">getWebSocketKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        webSocketHandler<span class=\"token punctuation\">.</span><span class=\"token function\">setWebSocketKey</span><span class=\"token punctuation\">(</span>webSocketKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token class-name\">WebSocketConnectionManager</span> connectionManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocketConnectionManager</span><span class=\"token punctuation\">(</span>  \n                webSocketClient<span class=\"token punctuation\">,</span> webSocketHandler<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ws://ops.koreainvestment.com:21000\"</span>  \n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        connectionManager<span class=\"token punctuation\">.</span><span class=\"token function\">setAutoStartup</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        connectionManager<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>프론트-백엔드 Handler</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">  \n<span class=\"token annotation punctuation\">@Component</span>  \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FrontendWebSocketHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TextWebSocketHandler</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WebSocketSession</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> subscriptions <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ApplicationEventPublisher</span> eventPublisher<span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">StockRepository</span> stockRepository<span class=\"token punctuation\">;</span>  \n  \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FrontendWebSocketHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationEventPublisher</span> eventPublisher<span class=\"token punctuation\">,</span> <span class=\"token class-name\">StockRepository</span> stockRepository<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>eventPublisher <span class=\"token operator\">=</span> eventPublisher<span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stockRepository <span class=\"token operator\">=</span> stockRepository<span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">removeSession</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> trId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> trKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">String</span> subscriptionKey <span class=\"token operator\">=</span> trId <span class=\"token operator\">+</span> <span class=\"token string\">\"|\"</span> <span class=\"token operator\">+</span> trKey<span class=\"token punctuation\">;</span>  \n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WebSocketSession</span><span class=\"token punctuation\">></span></span> sessions <span class=\"token operator\">=</span> subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sessions <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token comment\">// session 삭제  </span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sessions<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Removed session: \"</span> <span class=\"token operator\">+</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" from subscription: \"</span> <span class=\"token operator\">+</span> subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sessions<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                <span class=\"token comment\">// sessions가 비어 있으면 subscriptions에서 subscriptionKey 삭제 (옵션)  </span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sessions<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n                    subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                    eventPublisher<span class=\"token punctuation\">.</span><span class=\"token function\">publishEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocketEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> trId<span class=\"token punctuation\">,</span> trKey<span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                <span class=\"token punctuation\">}</span>  \n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>  \n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Session not found in subscription: \"</span> <span class=\"token operator\">+</span> subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span>  \n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No sessions found for subscription key: \"</span> <span class=\"token operator\">+</span> subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n  \n    <span class=\"token annotation punctuation\">@Override</span>  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterConnectionEstablished</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Frontend WebSocket Connected: \"</span> <span class=\"token operator\">+</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token annotation punctuation\">@Override</span>  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterConnectionClosed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CloseStatus</span> status<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>  \n        subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>sessions <span class=\"token operator\">-></span> sessions<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Frontend WebSocket Disconnected: \"</span> <span class=\"token operator\">+</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token annotation punctuation\">@Override</span>  \n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleTextMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TextMessage</span> message<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">String</span> payload <span class=\"token operator\">=</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">getPayload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token class-name\">ObjectMapper</span> objectMapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token comment\">// JSON 데이터를 JsonNode로 파싱  </span>\n            <span class=\"token class-name\">JsonNode</span> rootNode <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">readTree</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n            <span class=\"token comment\">// 각 키의 값 추출  </span>\n            <span class=\"token class-name\">String</span> type <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">asText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token class-name\">String</span> trType <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tr_type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">asText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token class-name\">String</span> symbol <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"symbol\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">asText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//symbol  </span>\n            <span class=\"token class-name\">String</span> rq_type <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rq_type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">asText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token class-name\">String</span> trId<span class=\"token punctuation\">;</span>  \n            <span class=\"token class-name\">String</span> trKey<span class=\"token punctuation\">;</span>  \n  \n            <span class=\"token class-name\">Stock</span> stockData <span class=\"token operator\">=</span> stockRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findBySymbol</span><span class=\"token punctuation\">(</span>symbol<span class=\"token punctuation\">)</span>  \n                    <span class=\"token punctuation\">.</span><span class=\"token function\">orElseThrow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid symbol: \"</span> <span class=\"token operator\">+</span> symbol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n            <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>rq_type<span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n                <span class=\"token keyword\">case</span> <span class=\"token string\">\"current\"</span><span class=\"token operator\">:</span>  \n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>stockData<span class=\"token punctuation\">.</span><span class=\"token function\">getCountry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"KSP\"</span><span class=\"token punctuation\">)</span>  \n                            <span class=\"token operator\">||</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>stockData<span class=\"token punctuation\">.</span><span class=\"token function\">getCountry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"KSD\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  \n                        trId <span class=\"token operator\">=</span> <span class=\"token string\">\"H0STCNT0\"</span><span class=\"token punctuation\">;</span>  \n                        trKey<span class=\"token operator\">=</span>symbol<span class=\"token punctuation\">;</span>  \n                    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>  \n                        trId <span class=\"token operator\">=</span> <span class=\"token string\">\"HDFSCNT0\"</span><span class=\"token punctuation\">;</span>  \n                        trKey<span class=\"token operator\">=</span><span class=\"token string\">\"D\"</span> <span class=\"token operator\">+</span> stockData<span class=\"token punctuation\">.</span><span class=\"token function\">getCountry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> symbol<span class=\"token punctuation\">;</span>  \n                    <span class=\"token punctuation\">}</span>  \n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  \n                <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>  \n                    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid rq_type: \"</span> <span class=\"token operator\">+</span> rq_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span>  \n  \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">+</span> symbol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token comment\">// 추가 로직  </span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"subscribe\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n                <span class=\"token class-name\">String</span> subscriptionKey <span class=\"token operator\">=</span> trId <span class=\"token operator\">+</span> <span class=\"token string\">\"|\"</span> <span class=\"token operator\">+</span> trKey<span class=\"token punctuation\">;</span>  \n  \n                <span class=\"token comment\">// 중복 요청 확인  </span>\n                subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">computeIfAbsent</span><span class=\"token punctuation\">(</span>subscriptionKey<span class=\"token punctuation\">,</span> k <span class=\"token operator\">-></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CopyOnWriteArraySet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User Subscribed: \"</span> <span class=\"token operator\">+</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" to \"</span> <span class=\"token operator\">+</span> subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n                eventPublisher<span class=\"token punctuation\">.</span><span class=\"token function\">publishEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocketEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> trId<span class=\"token punctuation\">,</span> trKey<span class=\"token punctuation\">,</span> trType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"unsubscribe\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n                <span class=\"token function\">removeSession</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> trId<span class=\"token punctuation\">,</span> trKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span>  \n  \n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to parse JSON payload: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">broadcastToSubscribers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> trId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> trKey<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">String</span> subscriptionKey <span class=\"token operator\">=</span> trId <span class=\"token operator\">+</span> <span class=\"token string\">\"|\"</span> <span class=\"token operator\">+</span> trKey<span class=\"token punctuation\">;</span>  \n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WebSocketSession</span><span class=\"token punctuation\">></span></span> sessions <span class=\"token operator\">=</span> subscriptions<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>subscriptionKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sessions <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            sessions<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>session <span class=\"token operator\">-></span> <span class=\"token punctuation\">{</span>  \n                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>  \n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">isOpen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n                        session<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TextMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                    <span class=\"token punctuation\">}</span>  \n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                <span class=\"token punctuation\">}</span>  \n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>백엔드-한투 api handler</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>  \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebSocketHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TextWebSocketHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ApplicationListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WebSocketEvent</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token annotation punctuation\">@Autowired</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">FrontendWebSocketHandler</span> frontendWebSocketHandler<span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> webSocketKey<span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">;</span>  \n  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setWebSocketKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> webSocketKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>webSocketKey <span class=\"token operator\">=</span> webSocketKey<span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token annotation punctuation\">@Override</span>  \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onApplicationEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">String</span> tr_id <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getTr_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token class-name\">String</span> tr_key <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getTr_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token class-name\">String</span> tr_type <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">getTr_type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>tr_id<span class=\"token punctuation\">,</span> tr_key<span class=\"token punctuation\">,</span> tr_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token annotation punctuation\">@Override</span> <span class=\"token comment\">// 웹 소켓 연결시  </span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterConnectionEstablished</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket Connected: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>webSocketKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>session <span class=\"token operator\">=</span> session<span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> tr_id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> tr_key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> tr_type<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>session <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">isOpen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket session is not open or is null.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n        <span class=\"token comment\">// Gson 객체 생성  </span>\n        <span class=\"token class-name\">Gson</span> gson <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token comment\">// Header 작성  </span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> header <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        header<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"approval_key\"</span><span class=\"token punctuation\">,</span> webSocketKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// WebSocket Key  </span>\n        header<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"custtype\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 고객 타입: 개인  </span>\n        header<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tr_type\"</span><span class=\"token punctuation\">,</span> tr_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 거래 타입: 등록  </span>\n        header<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"content-type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Content-Type  </span>\n  \n        <span class=\"token comment\">// Input 작성 (Body 내부의 중첩 필드)  </span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        input<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tr_id\"</span><span class=\"token punctuation\">,</span> tr_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 거래 ID        input.put(\"tr_key\", tr_key); // 거래 Key (종목코드)  </span>\n  \n        <span class=\"token comment\">// Body 작성  </span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> body <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        body<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token comment\">// 최종 요청 작성  </span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        request<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">,</span> header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        request<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token comment\">// JSON 직렬화  </span>\n        <span class=\"token class-name\">String</span> jsonRequest <span class=\"token operator\">=</span> gson<span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JSON Request: \"</span> <span class=\"token operator\">+</span> jsonRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token comment\">// WebSocket 메시지 전송  </span>\n        session<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TextMessage</span><span class=\"token punctuation\">(</span>jsonRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token annotation punctuation\">@Override</span> <span class=\"token comment\">// 데이터 통신시  </span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleTextMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TextMessage</span> message<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">String</span> payload <span class=\"token operator\">=</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">getPayload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Received Message: \"</span> <span class=\"token operator\">+</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PINGPONG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Received PING. Sending PONG...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            session<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TextMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PONG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span>  \n  \n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> stockInfo <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\^\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stockInfo<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> headerInfo <span class=\"token operator\">=</span> stockInfo<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\|\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n            <span class=\"token class-name\">String</span> trId <span class=\"token operator\">=</span> headerInfo<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 메시지에서 추출한 tr_id            String trKey = headerInfo[3]; // 메시지에서 추출한 tr_key  </span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>frontendWebSocketHandler <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n                frontendWebSocketHandler<span class=\"token punctuation\">.</span><span class=\"token function\">broadcastToSubscribers</span><span class=\"token punctuation\">(</span>trId<span class=\"token punctuation\">,</span> trKey<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n            <span class=\"token punctuation\">}</span>  \n        <span class=\"token punctuation\">}</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token annotation punctuation\">@Override</span> <span class=\"token comment\">// 웹소켓 통신 에러시  </span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleTransportError</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Throwable</span> exception<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WebSocket Error: \"</span> <span class=\"token operator\">+</span> exception<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        exception<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleTransportError</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n  \n    <span class=\"token annotation punctuation\">@Override</span> <span class=\"token comment\">// 웹 소켓 연결 종료시  </span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterConnectionClosed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocketSession</span> session<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CloseStatus</span> status<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>  \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"finished\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">afterConnectionClosed</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"December 21, 2024","title":"WebSocket architecture"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#websocket%EC%9D%84-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C%EC%9A%94\">WebSocket을 왜 사용해야 할까요?</a></p>\n</li>\n<li>\n<p><a href=\"#websocket-%EA%B5%AC%EC%84%B1%EC%9D%84-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C\">WebSocket 구성을 어떻게 해야할까?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%96%B4%EB%96%A4-%EB%AC%B8%EC%A0%9C%EA%B0%80-%EC%9E%88%EC%97%88%EC%9D%84%EA%B9%8C\">어떤 문제가 있었을까?</a></p>\n<ul>\n<li><a href=\"#1%EB%B2%88-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0\">1번 문제 해결</a></li>\n<li><a href=\"#2%EB%B2%88-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0\">2번 문제 해결</a></li>\n<li><a href=\"#3%EB%B2%88-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0\">3번 문제 해결</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C%EB%A5%BC-%EB%B6%84%EC%84%9D%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4\">코드를 분석해봅시다</a></p>\n<ul>\n<li><a href=\"#frontend---backend-websocket-config\">Frontend - Backend WebSocket Config</a></li>\n<li><a href=\"#backend---%ED%95%9C%ED%88%AC-api-websocket-%EC%84%A4%EC%A0%95\">Backend - 한투 API WebSocket 설정</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%A0%ED%8A%B8-%EB%B0%B1%EC%97%94%EB%93%9C-handler\">프론트-백엔드 Handler</a></li>\n<li><a href=\"#%EB%B0%B1%EC%97%94%EB%93%9C-%ED%95%9C%ED%88%AC-api-handler\">백엔드-한투 api handler</a></li>\n</ul>\n</li>\n</ul>"}},"pageContext":{"id":"877c4489-0668-55b3-83f1-e2f55f3fe262","frontmatter__slug":"/blog/stock-simulator/websocket","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["2018336255","2540505676","2678393935","2810064759","3398502926"],"slicesMap":{}}