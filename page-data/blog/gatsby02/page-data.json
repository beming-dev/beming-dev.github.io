{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/blog/gatsby02/","result":{"data":{"markdownRemark":{"html":"<p>카테고리 나누기, 글 페이지 만들기, scss적용, 이미지, component에서 graphql사용</p>\n<p>블로그 기능을 갖추기 위해서는 category를 나누는 기능과 markdown으로 작성한 글을 읽을 수 있는 페이지가 필요하다.</p>\n<ol>\n<li>글 읽는 페이지</li>\n</ol>\n<p>우리는 github page로 블로그를 호스팅하기 위해 markdown 형식으로 블로그의 글을 작성할 것이다. 그러기 위해선 우리가 markdown으로 쓴 글을 프로젝트의 폴더에 넣어놨을 때 그걸 읽어줄 페이지가 필요하다.\n<a href=\"https://www.gatsbyjs.com/docs/how-to/routing/adding-markdown-pages/\">https://www.gatsbyjs.com/docs/how-to/routing/adding-markdown-pages/</a>\n공식문서는 이 페이지에서 확인 가능하다.</p>\n<p>먼저,</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install gatsby-source-filesystem\nnpm install gatsby-transformer-remark</code></pre></div>\n<p>으로 gatsby-source-filesystem와 gatsby-transformer-remark 설치해준다.\ngatsby-source-filesystem는 local의 filesystem을 gatsby 앱에 포함시켜주기 위해 사용되고, gatsby-transformer-remark는 markdown파일의 frontmatter metadata들을 인식시키고 내용을 html에 포함시켜준다.</p>\n<p>참고로 frontmatter이란 YAML로 markdown 파일을 작성하기전에 써주는\n\"---\"로 감싸진 내용을 말한다.</p>\n<p>이제 src폴더에 원하는 이름으로 markdown포스트들을 담을 폴더를 만들어준다. 나는 blog라는 이름으로 지어서 src/blog폴더를 만들었다.</p>\n<p>다음으로 gatsby-config.js 파일의 plugins 배열에 다음 내용을 추가해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">plugins: [\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `blog`,\n        path: `${__dirname}/src/blog`,\n      },\n    },\n\t `gatsby-transformer-remark`,\n  ],</code></pre></div>\n<p>테스트를 위해 markdown 파일 하나를 src/blog폴더에 만들어보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\nslug: \"/blog/my-first-post\"\ndate: \"2022-04-09\"\ntitle: \"My first blog post\"\n---\nmy first post. 내 첫글.</code></pre></div>\n<p>위에서 말한 frontmatter까지 포함돼있다.</p>\n<p>이제 준비는 끝났다. 다음으로 src/pages폴더에 {MarkdownRemark.frontmatter<strong>slug}.js라는 이름의 파일을 만들어주자. 이 이름으로 파일을 만들면 gatsby가 markdown으로 작성된 글의 frontmatter에 포함된 slug의 내용을 읽어서 그 값에 맞는 주소로 페이지를 만들어 준다.\n{MarkdownRemark.frontmatter</strong>slug}.js의 내용은 공식 문서의 내용을 그대로 가져와서 써보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from \"react\"\nimport { graphql } from \"gatsby\"\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    &lt;div className=\"blog-post-container\">\n      &lt;div className=\"blog-post\">\n        &lt;h1>{frontmatter.title}&lt;/h1>\n        &lt;h2>{frontmatter.date}&lt;/h2>\n        &lt;div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      &lt;/div>\n    &lt;/div>\n  )\n}\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`\n</code></pre></div>\n<p>끝이다. 이제 <a href=\"http://localhost:8000/blog/my-first-post/%EB%A1%9C\">http://localhost:8000/blog/my-first-post/로</a> 접속하면 아래와 같이 뜰것이다.\n(이미지)</p>\n<p>간혹 옛날에 쓴 블로그들의 글을 보면 gatsby-node.js의 내용을 수정해서 글 페이지를 만들던데, 검색해본 결과 그 방법은 이제 사용하지 않는 것 같다. 나도 옛날 글들을 보고 헷갈려서 많이 헤맸었다.</p>\n<p>위의 코드를 보면 export const pageQuery부분에 graphql을 사용한 것을 볼 수 있다. gatsby에서는 graphql을 사용해서 데이터를 가져온다고 한다. 나도 graphql은 간단하게만 공부해서 자세히 모른지만 gatsby에서 사용하는데 문제는 없었다. 저런식으로 graphql구문을 export해주면 component의 props로 값이 전달된다. 위 예에서는</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">props.data.markdownRemark.frontmatter\nprops.data.markdownRemark.html</code></pre></div>\n<p>로 markdown파일의 내용에 접근할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm run develop</code></pre></div>\n<p>을 실행한 후, <a href=\"http://localhost:8000/%5C_%5C_%5C_graphql\">http://localhost:8000/\\_\\_\\_graphql</a> 에 접속하면 graphql로 접속할 수 있는 데이터들을 전부 볼 수 있고 grapgql구문도 만들어주니 한번씩 확인해보는 것이 좋다.</p>\n<p>추가로 src/pages가 아닌 src/components에서 위의 문법처럼 graphql에 접근하면 오류가 발생하므로 다른 방법으로 접근해야 하는데 다음에 설명하겠다. 다음 포스트에서는 카테고리를 만드는 방법에 대해 설명해보겠다.</p>","frontmatter":{"date":"September 29, 2022","title":"gatsby로 블로그 만들기 02"},"tableOfContents":""}},"pageContext":{"id":"2f4c8274-2dc3-5553-a1d6-82045a86ad34","frontmatter__slug":"/blog/gatsby02","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["2018336255","2540505676","2678393935","2810064759","3398502926"],"slicesMap":{}}