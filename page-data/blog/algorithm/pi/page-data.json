{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/blog/algorithm/pi/","result":{"data":{"markdownRemark":{"html":"<h1>문제</h1>\n<p><img src=\"images/20231208215531.png\" alt=\"\"></p>\n<h1>풀이</h1>\n<div class=\"gatsby-highlight\" data-language=\"c++\"><pre class=\"language-c++\"><code class=\"language-c++\">using namespace std;\n\nstring number;\n\nconst int BIG = 987654321;\nint dp[10001];\n//dp[i]: i~끝까지 난이도 최소값\n\nint level(string s) {\n\tbool flag = false;\n\tfor (int i = 0; i &lt; s.size() - 1; i++) {\n\t\tif (s[i] != s[i + 1]) flag = true;\n\t}\n\tif (!flag) return 1;\n\n\tflag = false;\n\tint mem = s[1] - s[0];\n\tfor (int i = 1; i &lt; s.size() - 1; i++) {\n\t\tif (s[i + 1] - s[i] != mem) flag = true;\n\t}\n\tif (!flag) {\n\t\tif (mem == 1) return 2;\n\t\telse return 5;\n\t}\n\n\tif (s.size() == 3 &amp;&amp; s[0] == s[2]) return 4;\n\tif (s.size() == 4 &amp;&amp; s[0] == s[2] &amp;&amp; s[1] == s[3]) return 4;\n\tif (s.size() == 5 &amp;&amp; s[0] == s[2] == s[4] &amp;&amp; s[1] == s[3]) return 4;\n\n\treturn 10;\n}\n\nint divide(int idx) {\n\tif (idx == number.size()) return 0;\n\n\tint &amp;ret = dp[idx];\n\tif (ret != -1) return ret;\n\n\tret = BIG;\n\n\tfor (int i = 3; i &lt;= 5; i++) {\n\t\tif (idx + i &lt;= number.size())\n\t\t{\n\t\t\tret = min(ret, level(number.substr(idx, i)) + divide(idx + i));\n\t\t}\n\t}\n\n\treturn ret;\n}\n\nint main(void) {\n\tmemset(dp, -1, sizeof(dp));\n\n\tcin &gt;&gt; number;\n\n\tcout &lt;&lt; divide(0);\n}\n\n</code></pre></div>\n<h1>복기</h1>\n<p>난이도를 반환하는 함수를 만들기 조금 귀찮은 것을 제외하면 어렵지는 않았다. 그러나 재귀함수의 탈출 조건과,</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if(idx+i &lt;= number.size())</code></pre></div>\n<p>부분에서 틀렸다. 나는 idx + i가 number.size() - 1 일 때를 탈출 조건으로 설정했는데, idx == number.size()일 때로 설정해야 마지막 숫자까지 검사가 된다는걸 깨달았다. 항상 조건의 경계 부분을 제대로 검사 해야겠다.</p>\n<h1>시간 복잡도</h1>\n<p>최대 n개의 부분 문제가 있고, 각 부분 문제를 해결하는데 최대 3개의 부분 문제를 보므로, 시간 복잡도는 O(n)이다.</p>","frontmatter":{"date":"December 03, 2023","title":"[동적계획] 원주율 외우기"},"tableOfContents":"<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C\">문제</a></li>\n<li><a href=\"#%ED%92%80%EC%9D%B4\">풀이</a></li>\n<li><a href=\"#%EB%B3%B5%EA%B8%B0\">복기</a></li>\n<li><a href=\"#%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84\">시간 복잡도</a></li>\n</ul>"}},"pageContext":{"id":"c1b7a168-b206-50b7-8467-fbcd18fd92e4","frontmatter__slug":"/blog/algorithm/pi","__params":{"frontmatter__slug":"blog"}}},"staticQueryHashes":["2018336255","2540505676","2678393935","2810064759","3398502926"],"slicesMap":{}}